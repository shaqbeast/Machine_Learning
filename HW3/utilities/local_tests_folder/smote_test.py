import numpy as np


class SMOTE_Test:

    def __init__(self) ->None:
        self.simple_classification_vectors = np.array([0, 0, 0, 1, 1, 1, 1,
            1, 1, 1]), np.array([1, 0, 1, 0, 1, 1, 1, 0, 0, 1])
        self.simple_conf_matrix = np.array([[1, 2], [3, 4]])
        self.multiclass_classification_vectors = np.array([0, 1, 0, 3, 2, 1,
            0, 2, 0, 3, 3, 2, 0, 2, 3, 1, 0, 0, 2, 3, 3, 2, 3, 3, 3, 1, 0, 
            1, 1, 3, 2, 1, 2, 2, 0, 0, 0, 1, 2, 3, 2, 2, 1, 3, 3, 2, 3, 0, 
            1, 2]), np.array([0, 3, 0, 3, 1, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 
            1, 2, 1, 3, 0, 3, 3, 0, 1, 1, 0, 1, 3, 2, 1, 0, 2, 3, 2, 1, 2, 
            2, 3, 0, 1, 1, 3, 1, 2, 1, 0, 3, 1, 1, 1])
        self.multiclass_conf_matrix = np.array([[4, 4, 4, 0], [2, 3, 2, 3],
            [4, 3, 3, 4], [2, 7, 2, 3]])
        self.conf_for_f1 = np.array([[10, 20, 15, 0, 0], [20, 60, 20, 20, 0
            ], [2, 20, 47, 10, 0], [12, 20, 19, 0, 0], [0, 0, 0, 0, 80]])
        self.calculated_f1s = np.array([0.2247191011235955, 0.5, 
            0.5222222222222221, 0.0, 1.0])
        self.roc_auc_min = 0
        self.roc_auc_max = 1
        self.y_true_auc = np.array([0, 0, 0, 0, 1, 1, 1, 1, 1, 1])
        self.y_pred_auc = np.array([0.1, 0.2, 0.3, 0.35, 0.45, 0.55, 0.6, 
            0.7, 0.8, 0.9])
        self.tpr = np.array([[0.0, 0.16666667, 0.33333333, 0.33333333, 0.5,
            0.83333333, 1.0, 1.0, 1.0, 1.0, 1.0]])
        self.fpr = np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.75,
            1.0, 1.0])
        self.roc_auc = 1
        self.interpolation_vectors = np.array([1.0, 0.0, -1.0]), np.array([
            5.0, -2.0, 3.3])
        self.inter_coeff = 0.75
        self.correct_point = np.array([4.0, -1.5, 2.225])
        self.flipped_coeff = np.array([2.0, -0.5, 0.075])
        self.knn_points = np.array([[0, 0], [1, 0], [9, 9], [-8, 4], [2, -3
            ], [1, 1], [5, 6], [0, 2], [7, 0], [3, -9]])
        self.three_nn = np.array([[1, 5, 7], [0, 5, 7], [6, 8, 5], [7, 0, 5
            ], [1, 0, 5], [1, 7, 0], [2, 8, 5], [5, 0, 1], [4, 1, 5], [4, 1,
            0]])
        self.X = np.array([[7.886, 0.355, 8.266, 9.764], [3.934, 8.923, 
            0.852, 7.859], [2.559, 2.454, 7.907, 6.277], [2.477, 9.096, 
            4.991, 8.605], [6.531, 8.543, 2.896, 2.212], [8.755, 3.554, 
            7.878, 6.529], [0.526, 3.659, 9.528, 5.603], [4.829, 5.885, 
            5.723, 2.16], [1.641, 8.497, 5.084, 2.531], [3.195, 0.056, 
            1.144, 3.346], [7.632, 7.692, 9.467, 9.218], [5.281, 2.74, 
            7.257, 7.141], [7.42, 9.418, 2.184, 5.894], [9.119, 1.721, 
            0.269, 5.443], [3.82, 7.471, 5.736, 9.631], [4.007, 5.579, 
            3.592, 8.533], [9.821, 5.242, 6.34, 9.493], [0.663, 0.149, 
            7.744, 1.432], [7.645, 2.919, 2.316, 8.786], [3.277, 1.635, 
            1.167, 0.087], [9.768, 3.041, 1.899, 1.711], [8.023, 4.478, 
            1.975, 1.092], [5.458, 8.971, 6.675, 2.527], [1.42, 0.914, 
            8.121, 8.083], [8.763, 1.156, 6.765, 7.557], [5.809, 0.373, 
            5.896, 9.048], [0.997, 9.721, 8.784, 6.204], [5.332, 5.842, 
            0.664, 8.971], [8.546, 3.351, 5.59, 0.636], [9.48, 6.707, 0.808,
            1.589], [6.587, 4.068, 6.701, 1.701], [7.891, 4.636, 4.926, 
            5.087], [7.597, 2.129, 3.806, 1.946], [4.432, 5.496, 3.995, 
            4.057], [0.591, 2.912, 3.639, 9.383], [0.666, 9.186, 5.527, 
            3.923], [4.618, 7.841, 7.977, 1.665], [8.206, 9.008, 2.64, 
            0.924], [2.499, 3.964, 3.499, 5.207], [5.294, 5.896, 4.073, 
            7.485], [3.297, 2.114, 9.902, 0.266], [3.216, 2.883, 8.106, 
            9.825], [7.655, 7.19, 1.947, 7.304], [6.299, 9.853, 0.545, 
            8.464], [6.425, 8.555, 6.325, 6.162], [5.755, 1.675, 8.342, 
            2.653], [4.85, 2.318, 3.432, 4.747], [4.698, 1.861, 2.889, 
            0.081], [1.643, 7.574, 9.92, 5.249], [8.347, 1.747, 0.075, 7.953]])
        self.y = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
            0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
